{"version":3,"sources":["webpack:///./src/components/BlogHeader.tsx","webpack:///./src/components/BlogItem.tsx","webpack:///./src/pages/blog/index.tsx"],"names":["BlogHeader","author","children","date","subtitle","Container","Title","Meta","Date","Author","Subtitle","role","oatMedium","mediaQuery","tablet","BlogLink","Link","blue","BlogLinkInner","BlogTitle","BlogItem","slug","title","to","dateTime","IndexPage","edges","data","allMarkdownRemark","Wrapper","map","node","key","id","frontmatter"],"mappings":"iLAcO,IAAMA,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,OACAC,EAFwB,EAExBA,SACAC,EAHwB,EAGxBA,KACAC,EAJwB,EAIxBA,SAJwB,OAMxB,YAACC,EAAD,KACE,YAACC,EAAD,KAAQJ,MACJC,IAAQF,IACV,YAACM,EAAD,OACKJ,GAAQ,YAACK,EAAD,KAAOL,EAAP,OACRF,GAAU,YAACQ,EAAD,aAAcR,MAG5BG,GAAY,YAACM,EAAD,CAAUC,KAAK,gBAAgBP,KAI5CC,EAAY,sBAAH,oBAAG,CAAH,0CAEcO,IAFd,KAKTN,EAAQ,kBAAH,oBAAG,CAAH,2CAKPO,IAAWC,OALJ,qCAWLP,EAAO,mBAAH,oBAAG,CAAH,wEAMJC,EAAO,oBAAH,oBAAG,CAAH,8CAIJC,EAAS,uBAAH,oBAAG,CAAH,6CAINC,EAAW,mBAAH,oBAAG,CAAH,4F,yJChDRK,EAAW,YAAOC,OAAP,sBAAH,yCAEeJ,IAFf,iGAYDK,IAZC,KAeVJ,IAAWC,OAfD,2DAuBRI,EAAgB,mBAAH,oBAAG,CAAH,kBAGfL,IAAWC,OAHI,iHAYbN,EAAO,oBAAH,oBAAG,CAAH,iBAGNK,IAAWC,OAHL,kBAQJK,EAAY,kBAAH,oBAAG,CAAH,gCAIXN,IAAWC,OAJA,kBASTL,EAAS,oBAAH,oBAAG,CAAH,iBAGRI,IAAWC,OAHH,wDAUCM,EAAW,SAAC,GAAiD,IAA/CnB,EAA+C,EAA/CA,OAAQE,EAAuC,EAAvCA,KAAMkB,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAC7C,OACE,YAACP,EAAD,CAAUQ,GAAIF,GACZ,YAACH,EAAD,KACE,YAAC,EAAD,CAAMM,SAAUrB,GAAOA,GACvB,YAACgB,EAAD,KAAYG,KACTrB,GAAU,YAACQ,EAAD,WAAYR,M,YCtDlBwB,UAlBG,SAAC,GAIb,IAFmBC,EAEnB,EAHJC,KACEC,kBAAqBF,MAGvB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKJ,MAAM,SACX,YAACO,EAAA,EAAD,KACE,YAAC7B,EAAA,EAAD,mBACC0B,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,EAAD,aAAUC,IAAKD,EAAKE,IAAQF,EAAKG","file":"component---src-pages-blog-index-tsx-8445dd2980ed7198f43d.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/react\"\nimport styled from \"@emotion/styled\"\n\nimport { oatMedium } from \"../style/colors\"\nimport { mediaQuery } from \"../style/mediaQueries\"\n\ninterface BlogHeaderProps {\n  children?: React.ReactNode\n  date?: string\n  author?: string\n  subtitle?: string\n}\n\nexport const BlogHeader = ({\n  author,\n  children,\n  date,\n  subtitle,\n}: BlogHeaderProps) => (\n  <Container>\n    <Title>{children}</Title>\n    {!!(date || author) && (\n      <Meta>\n        {!!date && <Date>{date} </Date>}\n        {!!author && <Author>/ By {author}</Author>}\n      </Meta>\n    )}\n    {!!subtitle && <Subtitle role=\"doc-subtitle\">{subtitle}</Subtitle>}\n  </Container>\n)\n\nconst Container = styled.header`\n  padding: 3rem 0;\n  border-bottom: 1px solid ${oatMedium};\n`\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  line-height: 1.2;\n\n  ${mediaQuery.tablet} {\n    font-size: 3rem;\n    max-width: 700px;\n  }\n`\n\nconst Meta = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  font-weight: 600;\n`\n\nconst Date = styled.time`\n  margin-right: 0.5rem;\n`\n\nconst Author = styled.address`\n  font-style: normal;\n`\n\nconst Subtitle = styled.div`\n  font-size: 1.4rem;\n  max-width: 700px;\n  margin-top: 2rem;\n  line-height: 1.4;\n`\n","/** @jsx jsx */\nimport { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport { jsx } from \"@emotion/react\"\nimport { mediaQuery } from \"../style/mediaQueries\"\nimport { blue, oatMedium } from \"../style/colors\"\n\ninterface BlogItemProps {\n  date: string\n  slug: string\n  title: string\n  author?: string\n}\n\nconst BlogLink = styled(Link)`\n  display: block;\n  border-bottom: 1px solid ${oatMedium};\n  color: inherit;\n  text-decoration: none;\n\n  &:last-child {\n    border-bottom: 0 none;\n  }\n\n  &:hover,\n  &:active {\n    color: ${blue};\n  }\n\n  ${mediaQuery.tablet} {\n    &:hover > div,\n    &:active > div {\n      transform: translateX(1rem);\n    }\n  }\n`\n\nconst BlogLinkInner = styled.div`\n  padding: 60px 0;\n\n  ${mediaQuery.tablet} {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    transition: all 0.15s ease-in;\n  }\n`\n\nconst Date = styled.time`\n  flex-shrink: 0;\n\n  ${mediaQuery.tablet} {\n    width: 160px;\n  }\n`\n\nconst BlogTitle = styled.h3`\n  margin: 1rem 0;\n  font-size: 2rem;\n\n  ${mediaQuery.tablet} {\n    flex-grow: 1;\n  }\n`\n\nconst Author = styled.span`\n  flex-shrink: 0;\n\n  ${mediaQuery.tablet} {\n    width: 160px;\n    display: flex;\n    justify-content: flex-end;\n  }\n`\n\nexport const BlogItem = ({ author, date, slug, title }: BlogItemProps) => {\n  return (\n    <BlogLink to={slug}>\n      <BlogLinkInner>\n        <Date dateTime={date}>{date}</Date>\n        <BlogTitle>{title}</BlogTitle>\n        {!!author && <Author>By {author}</Author>}\n      </BlogLinkInner>\n    </BlogLink>\n  )\n}\n","/** @jsx jsx */\nimport { graphql } from \"gatsby\"\nimport { jsx } from \"@emotion/react\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport { Wrapper } from \"../../components/Wrapper\"\nimport { BlogItem } from \"../../components/BlogItem\"\nimport { BlogHeader } from \"../../components/BlogHeader\"\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Wrapper>\n        <BlogHeader>Blog posts</BlogHeader>\n        {edges.map(({ node }) => (\n          <BlogItem key={node.id} {...node.frontmatter} />\n        ))}\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            author\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}